--- origsrc/PyQt-x11-gpl-4.4.2/sip/QtCore/qobject.sip	2008-05-20 16:32:57.000000000 -0500
+++ src/PyQt-x11-gpl-4.4.2/sip/QtCore/qobject.sip	2008-07-22 16:59:13.000000000 -0500
@@ -255,7 +255,7 @@
 %End
 
 public:
-    static const QMetaObject staticMetaObject;
+    static QMetaObject staticMetaObject;
 %GetCode
         sipPy = qtcore_staticMetaObject_helper(sipPyType);
 %End
@@ -1540,7 +1540,7 @@
             int flags);
     ~PyQtProxy();
 
-    static const QMetaObject staticMetaObject;
+    static QMetaObject staticMetaObject;
     virtual const QMetaObject *metaObject() const;
     virtual void *qt_metacast(const char *);
     virtual int qt_metacall(QMetaObject::Call, int, void **);
@@ -1596,7 +1596,7 @@
 };
 
 
-static const uint slot_meta_data[] = {
+static uint slot_meta_data[] = {
     // content:
     1,       // revision
     0,       // classname
@@ -1616,12 +1616,12 @@
 };
 
 
-static const char slot_meta_stringdata[] = {
+static char slot_meta_stringdata[] = {
     "PyQtProxy\0\0pysignal(PyQt_PyObject)\0disable()\0unislot()\0"
 };
 
 
-const QMetaObject PyQtProxy::staticMetaObject = {
+QMetaObject PyQtProxy::staticMetaObject = {
     {
         &QObject::staticMetaObject,
         slot_meta_stringdata,
@@ -3107,7 +3107,7 @@
 
     typedef QPair<PyObject *, PyObject *> prop_data;
     QMap<uint, prop_data> pprops;
-    QList<const QMetaObject *> enum_scopes;
+    QList<QMetaObject *> enum_scopes;
     SIP_SSIZE_T pos = 0;
     PyObject *key, *value, *psignals = 0;
 
@@ -3190,14 +3190,14 @@
 
                     if (es_wt && !PyType_IsSubtype(pytype, (PyTypeObject *)es_wt))
                     {
-                        const QMetaObject *mo;
+                        QMetaObject *mo;
 
                         // See if we have a Python sub-class, or a wrapped Qt
                         // class.
                         if (es_wt->qt_qobject)
                             mo = &(reinterpret_cast<qtcore_qobject *>(es_wt->qt_qobject))->mo;
                         else
-                            mo = reinterpret_cast<const QMetaObject *>(es_wt->type->td_qt);
+                            mo = const_cast<QMetaObject*>(reinterpret_cast<const QMetaObject *>(es_wt->type->td_qt));
 
                         if (mo && !enum_scopes.contains(mo))
                             enum_scopes.append(mo);
@@ -3224,7 +3224,7 @@
     // Create and fill the extradata array.
     if (!enum_scopes.isEmpty())
     {
-        const QMetaObject **extradata = new const QMetaObject *[enum_scopes.size() + 1];
+        QMetaObject **extradata = new QMetaObject *[enum_scopes.size() + 1];
 
         for (int i = 0; i < enum_scopes.size(); ++i)
             extradata[i] = enum_scopes.at(i);
